{"version":3,"sources":["UI_components/main_navbar.js","graphs/24 Giugno/Tavola 2/TotaleChiamate1522.js","graphs/24 Giugno/Tavola 2/MotivoChiamata1522.js","App.js","reportWebVitals.js","index.js"],"names":["MainNavbar","Navbar","bg","Brand","React","Component","TotaleChiamate1522","ref","useRef","margin","width","height","useEffect","Promise","all","d3","d","anno","motivo_chiamata","chiamata_telefonica","chat","then","allData","chiamate","totale_chiamate","allKeys","Object","keys","groupKey","slice","colors","range","svg","current","classed","attr","append","style","text","x","domain","map","paddingInner","call","x1","rangeRound","bandwidth","padding","y","key","nice","g","select","remove","selectAll","data","join","value","MotivoChiamata1522","filter","chiamate_anni","Set","console","log","enter","bar","update","selectedGroup","wrap","chiamateFilter","transition","duration","each","word","this","words","split","reverse","line","lineNumber","dy","parseFloat","tspan","pop","push","node","getComputedTextLength","on","property","App","Container","fluid","Row","className","Col","md","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a35e0be.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\n\r\nclass MainNavbar extends React.Component {\r\n    render() {\r\n        return (\r\n            <Navbar bg=\"light\">\r\n                <Navbar.Brand>Narra1522</Navbar.Brand>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainNavbar;","import React, { useRef } from 'react';\r\nimport * as d3 from \"d3\";\r\n\r\nconst TotaleChiamate1522 = () => {\r\n    const ref = useRef();\r\n    var margin = { top: 40, right: 10, bottom: 20, left: 40 },\r\n        width = 600 - margin.left - margin.right,\r\n        height = 500 - margin.top - margin.bottom\r\n\r\n    const github_gist = \"https://raw.githubusercontent.com/v-limperio/CAV_1522/main/json/24%20Giugno/Tavola-2.json\";\r\n\r\n    React.useEffect(() => {\r\n        Promise.all([\r\n            d3.json(github_gist, function (d) {\r\n                return {\r\n                    anno: d.anno,\r\n                    motivo_chiamata: d.motivo_chiamata,\r\n                    chiamata_telefonica: d.chiamata_telefonica,\r\n                    chat: d.chat\r\n                }\r\n            })\r\n        ])\r\n            .then(\r\n                function (allData) {\r\n                    const chiamate = allData[0],\r\n                        totale_chiamate = d3.filter(chiamate, d => d.motivo_chiamata === \"Totale valide\"), //Filtro il totale delle chiamate\r\n                        allKeys = Object.keys(totale_chiamate[0]),\r\n                        groupKey = allKeys[0],\r\n                        keys = allKeys.slice(2),\r\n                        colors = d3\r\n                            .scaleOrdinal()\r\n                            .range([\"#98abc5\", \"#6b486b\"]);\r\n\r\n                    //Genero l'svg\r\n                    const svg = d3\r\n                        .select(ref.current)\r\n                        .classed(\"svg-container\", true)\r\n                        .attr(\"class\", \"svg-content-responsive\")\r\n                        .attr(\"width\", width + margin.left + margin.right)\r\n                        .attr(\"height\", height + margin.top + margin.bottom)\r\n                        .attr(\"viewBox\", \"0 0 650 550\")\r\n                        .append(\"g\")\r\n                        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n                    //Legenda\r\n                    svg.append(\"circle\").attr(\"cx\", 150).attr(\"cy\", 15).attr(\"r\", 6).style(\"fill\", \"#98abc5\")\r\n                    svg.append(\"text\").attr(\"x\", 160).attr(\"y\", 15).text(\"Chiamata telefonica\").style(\"font-size\", \"15px\").attr(\"alignment-baseline\", \"middle\")\r\n                    svg.append(\"circle\").attr(\"cx\", 350).attr(\"cy\", 15).attr(\"r\", 6).style(\"fill\", \"#6b486b\")\r\n                    svg.append(\"text\").attr(\"x\", 360).attr(\"y\", 15).text(\"Chat\").style(\"font-size\", \"15px\").attr(\"alignment-baseline\", \"middle\")\r\n\r\n                    //TITOLO\r\n                    svg.append(\"text\")\r\n                        .attr(\"class\", \"title\")\r\n                        .attr(\"x\", (width / 2))\r\n                        .attr(\"y\", 0 - (margin.top / 2))\r\n                        .attr(\"text-anchor\", \"middle\")\r\n                        .style(\"font-size\", \"16px\")\r\n                        .style(\"text-decoration\", \"underline\")\r\n                        .text(\"Totale dei contatti validi al servizio 1522 (Telefono/Chat). Anno 2018/2020\");\r\n\r\n                    //Scala per l'asse x\r\n                    var x = d3\r\n                        .scaleBand()\r\n                        .domain(totale_chiamate.map(d => d[groupKey]))\r\n                        .range([0, width])\r\n                        .paddingInner(0.1);\r\n                    //Asse x\r\n                    svg.append(\"g\")\r\n                        .attr(\"class\", \"xAxis\")\r\n                        .attr(\"transform\", `translate(0,${height})`)\r\n                        .style(\"font-size\", 12)\r\n                        .call(d3.axisBottom(x));\r\n\r\n                    //Sottgruppi\r\n                    var x1 = d3\r\n                        .scaleBand()\r\n                        .domain(keys)\r\n                        .rangeRound([0, x.bandwidth()])\r\n                        .padding(0.05);\r\n\r\n                    //Scala per l'asse y\r\n                    var y = d3\r\n                        .scaleLinear()\r\n                        .domain([0, d3.max(totale_chiamate, d => d3.max(keys, key => d[key]))]).nice()\r\n                        .range([height, 0]);\r\n                    //Asse y\r\n                    svg.append(\"g\")\r\n                        .attr(\"class\", \"yAxis\")\r\n                        .style(\"font-size\", 12)\r\n                        .call(d3.axisLeft(y))\r\n                        .call(g => g.select(\".domain\").remove());\r\n\r\n                    //Barchart\r\n                    svg.append(\"g\")\r\n                        .selectAll(\"g\")\r\n                        .data(totale_chiamate)\r\n                        .join(\"g\")\r\n                        .attr(\"transform\", d => `translate(${x(d[groupKey])},0)`)\r\n                        .selectAll(\"rect\")\r\n                        .data(d => keys.map(key => ({ key, value: d[key] })))\r\n                        .join(\"rect\")\r\n                        .attr(\"x\", d => x1(d.key))\r\n                        .attr(\"y\", d => y(d.value))\r\n                        .attr(\"width\", x1.bandwidth())\r\n                        .attr(\"height\", d => y(0) - y(d.value))\r\n                        .attr(\"fill\", d => colors(d.key))\r\n                        .append(\"title\")\r\n                        .text(d => `Canale: ${d.key}\r\nContatti: ${d.value}`);\r\n\r\n                    //Animazioni\r\n                },\r\n            );\r\n    });\r\n\r\n\r\n    return (\r\n        <svg ref={ref} />\r\n    );\r\n}\r\nexport default TotaleChiamate1522;","import React, { useRef } from 'react';\r\nimport * as d3 from \"d3\";\r\n\r\n\r\nconst MotivoChiamata1522 = () => {\r\n    const ref = useRef();\r\n    const github_gist = \"https://raw.githubusercontent.com/v-limperio/CAV_1522/main/json/24%20Giugno/Tavola-2.json\";\r\n    var margin = { top: 40, right: 10, bottom: 70, left: 40 },\r\n        width = 1300 - margin.left - margin.right,\r\n        height = 500 - margin.top - margin.bottom\r\n\r\n    React.useEffect(() => {\r\n        Promise.all([\r\n            d3.json(github_gist, function (d) {\r\n                return {\r\n                    anno: d.anno,\r\n                    motivo_chiamata: d.motivo_chiamata,\r\n                    chiamata_telefonica: d.chiamata_telefonica,\r\n                    chat: d.chat\r\n                }\r\n            })\r\n        ]).then(\r\n            function (allData) {\r\n                var chiamate = allData[0].filter(d => d.motivo_chiamata !== \"Totale valide\"),\r\n                    chiamate_anni = new Set(chiamate.map(d => d.anno));\r\n\r\n                console.log(chiamate);\r\n\r\n                //Genero l'svg\r\n                const svg = d3\r\n                    .select(ref.current)\r\n                    .classed(\"svg-container\", true)\r\n                    .attr(\"class\", \"svg-content-responsive\")\r\n                    .attr(\"width\", width + margin.left + margin.right)\r\n                    .attr(\"height\", height + margin.top + margin.bottom)\r\n                    .attr(\"viewBox\", \"0 0 1400 550\")\r\n                    .append(\"g\")\r\n                    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n                //Selettore\r\n                d3.select(\"#selectAnno\")\r\n                    .selectAll('myOptions')\r\n                    .data(chiamate_anni)\r\n                    .enter()\r\n                    .append('option')\r\n                    .text(d => d)\r\n                    .attr(\"value\", d => d);\r\n\r\n                //Asse X\r\n                var x = d3\r\n                    .scaleBand()\r\n                    .domain(chiamate.map(d => d.motivo_chiamata))\r\n                    .range([0, width])\r\n                    .padding(0.2);\r\n\r\n                //Asse Y\r\n                var y = d3\r\n                    .scaleLinear()\r\n                    .domain([0, d3.max(chiamate, d => d.chiamata_telefonica)])\r\n                    .range([height, 0]);\r\n\r\n                const bar = svg.append(\"g\")\r\n                    .selectAll(\"g\");\r\n\r\n                //Aggiornamento per anno\r\n                function update(selectedGroup) {\r\n\r\n                    svg.selectAll(\"rect\").remove();\r\n                    svg.selectAll(\".title\").remove();\r\n                    svg.selectAll(\".xAxis\").remove();\r\n                    svg.selectAll(\".yAxis\").remove();\r\n\r\n                    svg.append(\"g\")\r\n                        .attr(\"class\", \"xAxis\")\r\n                        .attr(\"transform\", `translate(0,${height})`)\r\n                        .style(\"font-size\", 12)\r\n                        .call(d3.axisBottom(x))\r\n                        .selectAll(\".tick text\")\r\n                        .call(wrap, x.bandwidth());\r\n\r\n                    svg.append(\"g\")\r\n                        .attr(\"class\", \"yAxis\")\r\n                        .style(\"font-size\", 12)\r\n                        .call(d3.axisLeft(y))\r\n                        .call(g => g.select(\".domain\").remove());\r\n\r\n                    //TITOLO\r\n                    svg.append(\"text\")\r\n                        .attr(\"class\", \"title\")\r\n                        .attr(\"x\", (width / 2))\r\n                        .attr(\"y\", 0 - (margin.top / 2))\r\n                        .attr(\"text-anchor\", \"middle\")\r\n                        .style(\"font-size\", \"16px\")\r\n                        .style(\"text-decoration\", \"underline\")\r\n                        .text(\"Motivazioni dei contatti validi al servizio 1522. Anno: \" + selectedGroup);\r\n\r\n                    var chiamateFilter = d3.filter(chiamate, d => d.anno == selectedGroup);\r\n                    console.log(chiamateFilter);\r\n\r\n                    bar\r\n                        .data(chiamateFilter)\r\n                        .enter()\r\n                        .append(\"rect\")\r\n                        .attr(\"x\", d => x(d.motivo_chiamata))\r\n                        .attr(\"y\", d => y(0))\r\n                        .attr(\"width\", x.bandwidth())\r\n                        .attr(\"height\", d => height - y(0))\r\n                        .attr(\"fill\", \"#98abc5\")\r\n                        .append(\"title\")\r\n                        .text(d => `${d.motivo_chiamata}\r\nChiamate: ${d.chiamata_telefonica}`);\r\n\r\n                    //Animation\r\n                    svg.selectAll(\"rect\")\r\n                        .transition()\r\n                        .duration(1000)\r\n                        .attr(\"y\", d => y(d.chiamata_telefonica))\r\n                        .attr(\"height\", d => y(0) - y(d.chiamata_telefonica));\r\n                }\r\n\r\n                //Cambiamento selezione\r\n                d3.select(\"#selectAnno\").on(\"change\", function (d) {\r\n                    var selectedAnno = d3.select(this).property(\"value\");\r\n                    update(selectedAnno);\r\n                });\r\n\r\n                update(\"2018\");\r\n\r\n                //Funzione di Wrap per le etichette troppo lunghe \r\n                function wrap(text, width) {\r\n                    text.each(function () {\r\n                        var text = d3.select(this),\r\n                            words = text.text().split(/\\s+/).reverse(),\r\n                            word,\r\n                            line = [],\r\n                            lineNumber = 0,\r\n                            lineHeight = 1, // ems\r\n                            y = text.attr(\"y\"),\r\n                            dy = parseFloat(text.attr(\"dy\")),\r\n                            tspan = text.text(null)\r\n                                .append(\"tspan\")\r\n                                .attr(\"x\", 0)\r\n                                .attr(\"y\", y)\r\n                                .attr(\"dy\", dy + \"em\");\r\n                        while (!!(word = words.pop())) {\r\n                            line.push(word);\r\n                            tspan.text(line.join(\" \"));\r\n                            if (tspan.node().getComputedTextLength() > width) {\r\n                                line.pop();\r\n                                tspan.text(line.join(\" \"));\r\n                                line = [word];\r\n                                tspan = text.append(\"tspan\")\r\n                                    .attr(\"x\", 0)\r\n                                    .attr(\"y\", y)\r\n                                    .attr(\"dy\", `${++lineNumber * lineHeight + dy}em`)\r\n                                    .text(word);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                // Fine Funzione\r\n\r\n            })\r\n    });\r\n\r\n    return <svg ref={ref} />\r\n};\r\n\r\nexport default MotivoChiamata1522;","import './App.css';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport React from 'react';\nimport MainNavbar from './UI_components/main_navbar';\nimport TotaleChiamate1522 from './graphs/24 Giugno/Tavola 2/TotaleChiamate1522';\nimport MotivoChiamata1522 from './graphs/24 Giugno/Tavola 2/MotivoChiamata1522';\n\nconst App = () => {\n  return (\n    <Container fluid>\n      <MainNavbar />\n      <Row className=\"testata\">\n        <Col className=\"coltestata\">\n        <h1>Heading</h1>\n          <h3>Prova Grafico (Verticale)</h3>\n          <p>\n            Lorem ipsum dolor sit amet,\n            consectetur adipiscing elit,\n            sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n            Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n            Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n            Excepteur sint occaecat cupidatat non proident,\n            sunt in culpa qui officia deserunt mollit anim id est laborum\n            Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, \n            totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. \n            Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, \n            sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. \n            Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, \n            sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem.\n            Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, \n            nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, \n            vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\n          </p>\n        </Col>\n        <Col md className=\"hc-graphbox\">\n          <TotaleChiamate1522 />\n        </Col>\n      </Row>\n      <Row className=\"testata\">\n        <Col className=\"coltestata\">\n          <h1>Heading</h1>\n          <h3>Prova Grafico (Orizzontale)</h3>\n          <p>\n            Lorem ipsum dolor sit amet,\n            consectetur adipiscing elit,\n            sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n            Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n            Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n            Excepteur sint occaecat cupidatat non proident,\n            sunt in culpa qui officia deserunt mollit anim id est laborum\n            Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, \n            totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. \n            Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, \n            sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. \n            Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, \n            sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem.\n            Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, \n            nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, \n            vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\n          </p>\n        </Col>\n      </Row>\n      <Row className=\"hr-graphbox\">\n        <Col md className=\"hr-graphbox\">\n        <select id=\"selectAnno\"></select>\n        <MotivoChiamata1522 />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}